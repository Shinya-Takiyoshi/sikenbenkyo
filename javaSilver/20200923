■インタフェース
・interfaceで抽象メソッドを宣言した場合、デフォルトの修飾子はpublicになる。
interfaceで定義した修飾子を厳しくすることはできない。

■同一性/同値性
・同一性 (==)左右の変数が同じ参照先でなければいけない。
・同値性 (equals)変数が参照しているインスタンスが同じ値でなけれなばならない。

■抽象クラス
・抽象クラスは抽象メソッド、具象メソッドどちらでも定義できる。
　抽象メソッド
 　実装が無い
　public abstract int Item()
  具象メソッド
  　実装がある
  public int Item() {
    return 0;
  }  

■Javaクラスの説明
・mainメソッドはエントリーポイントなので、すべてのクラスが持つ必要はない。
　複数持っているとコンパイラがエントリーポイントがどれか判断できなくなる。
・Objectクラスがクラス階層のルートです。
・mainメソッドはオーバーロードできる。
・パッケージは宣言なしで、デフォルトパッケージがある。

■static
staticメソッド内はstatic変数でないといけない。

■例外
・catchはThrowble型である。
・RentimeExceptionでキャッチして例外にしたあと復旧は可能
・Errorクラスは非検査例外で、復旧できない。
・例外はすべてthrowできる。

■StringBuilder
デフォルトでバッファとして16文字
toString()で空文字として取得する。
■ラムダ式
ラムダ式で宣言された変数はラムダ式の中だけで有効である。
下記の例でいくと、String sのこと
if(list.removeIf(String s) -> {return s.length() == 5;}))



 
